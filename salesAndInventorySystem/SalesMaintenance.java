/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salesAndInventorySystem;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author james
 */
public class SalesMaintenance extends javax.swing.JFrame {

    /**
     * Creates new form SalesMaintenance
     */
    public SalesMaintenance() {
        initComponents();
        setRecordsToTable();
        showIcon();
    }
    
    private void showIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("wine__.png")));
    }
    
    public void setRecordsToTable(){
        
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/el_coco_db","root","root");
            PreparedStatement pst = con.prepareStatement("SELECT * FROM sales_transactions");
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                
                int sales_transactions_id = rs.getInt("salestransaction_id");
                int invoice_id = rs.getInt("invoice_id");
                int customer_id = rs.getInt("customer_id");
                String customerName = rs.getString("customername");
                String totalquantity = rs.getString("totalquantity");
                String amountdue = rs.getString("amountdue");
                String status = rs.getString("status");
                String balance = rs.getString("change_balance");
                String deliverytype = rs.getString("deliverytype");
                String modeofpayment = rs.getString("modeofpayment");
                String date = rs.getString("date");
                
                Object[] obj = {sales_transactions_id, invoice_id, customer_id, customerName, totalquantity, amountdue, status, balance, deliverytype, modeofpayment, date };
                
                DefaultTableModel model = (DefaultTableModel)salesMaintenanceTable.getModel();
                model.addRow(obj);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        salesReportTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        customerNameTf = new javax.swing.JTextField();
        salesTransactionsIdTf = new javax.swing.JTextField();
        customerIdTf = new javax.swing.JTextField();
        amountDueTf = new javax.swing.JTextField();
        updatePaymentTf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        searchTf = new javax.swing.JTextField();
        editBtn = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        salesMaintenanceTable = new javax.swing.JTable();
        balanceTf = new javax.swing.JTextField();
        refreshBtn1 = new javax.swing.JButton();
        statusSearch = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        salesReportTable.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        salesReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Invoice ID", "STransactions ID", "Customer ID", "Customer Name", "Total Quantity", "Amount Due", "Status", "Balance", "Delivery Type", "Mode of Payment", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesReportTable.getTableHeader().setReorderingAllowed(false);
        salesReportTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesReportTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(salesReportTable);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel3.setText("Update Payment");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 140, -1, 40));

        customerNameTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        customerNameTf.setToolTipText("");
        customerNameTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        customerNameTf.setEnabled(false);
        jPanel2.add(customerNameTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 140, 230, 40));

        salesTransactionsIdTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        salesTransactionsIdTf.setToolTipText("");
        salesTransactionsIdTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        salesTransactionsIdTf.setEnabled(false);
        salesTransactionsIdTf.setMargin(new java.awt.Insets(5, 5, 5, 5));
        salesTransactionsIdTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesTransactionsIdTfActionPerformed(evt);
            }
        });
        jPanel2.add(salesTransactionsIdTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 40, 230, 40));

        customerIdTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        customerIdTf.setToolTipText("");
        customerIdTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        customerIdTf.setEnabled(false);
        customerIdTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerIdTfActionPerformed(evt);
            }
        });
        jPanel2.add(customerIdTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 230, 40));

        amountDueTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        amountDueTf.setToolTipText("");
        amountDueTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        amountDueTf.setEnabled(false);
        jPanel2.add(amountDueTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 40, 230, 40));

        updatePaymentTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        updatePaymentTf.setToolTipText("");
        updatePaymentTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        updatePaymentTf.setEnabled(false);
        jPanel2.add(updatePaymentTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 140, 230, 40));

        jLabel8.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        jLabel8.setText("Search ");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(970, 210, -1, 40));

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel9.setText("Customer ID");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, 130, 40));

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel10.setText("Customer Name");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 140, -1, 40));

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel11.setText("Amount Due");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 40, -1, 40));

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel12.setText("Balance");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 90, -1, 40));

        updateBtn.setBackground(new java.awt.Color(44, 119, 33));
        updateBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/updated.png"))); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.setEnabled(false);
        updateBtn.setFocusable(false);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel2.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 200, 140, 50));

        jLabel13.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel13.setText("Sales Transactions ID");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, 40));

        searchTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        searchTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchTfKeyReleased(evt);
            }
        });
        jPanel2.add(searchTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 210, 180, 40));

        editBtn.setBackground(new java.awt.Color(44, 119, 33));
        editBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        editBtn.setText("EDIT");
        editBtn.setFocusable(false);
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel2.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 110, 50));

        salesMaintenanceTable.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        salesMaintenanceTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STransaction ID", "Invoice ID", "Customer ID", "Customer Name", "Total Quantity", "Amount Due", "Status", "Change/Balance", "Delivery Type", "Mode of Payment", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        salesMaintenanceTable.getTableHeader().setReorderingAllowed(false);
        salesMaintenanceTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesMaintenanceTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(salesMaintenanceTable);
        if (salesMaintenanceTable.getColumnModel().getColumnCount() > 0) {
            salesMaintenanceTable.getColumnModel().getColumn(0).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(0).setPreferredWidth(15);
            salesMaintenanceTable.getColumnModel().getColumn(1).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(1).setPreferredWidth(10);
            salesMaintenanceTable.getColumnModel().getColumn(2).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(3).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(4).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(5).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(6).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(7).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(8).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(9).setResizable(false);
            salesMaintenanceTable.getColumnModel().getColumn(10).setResizable(false);
        }

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 1290, 410));

        balanceTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        balanceTf.setToolTipText("");
        balanceTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        balanceTf.setEnabled(false);
        jPanel2.add(balanceTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(900, 90, 230, 40));

        refreshBtn1.setBackground(new java.awt.Color(44, 119, 33));
        refreshBtn1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        refreshBtn1.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh (1).png"))); // NOI18N
        refreshBtn1.setText("Refresh");
        refreshBtn1.setFocusable(false);
        refreshBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtn1ActionPerformed(evt);
            }
        });
        jPanel2.add(refreshBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1220, 210, 120, 40));

        statusSearch.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        statusSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unpaid", "Partially Paid", "Paid" }));
        statusSearch.setFocusable(false);
        statusSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusSearchActionPerformed(evt);
            }
        });
        jPanel2.add(statusSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 200, 170, 50));

        jLabel17.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        jLabel17.setText("Select Payment Status :");
        jPanel2.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 200, 200, 50));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1380, 710));

        jPanel1.setBackground(new java.awt.Color(0, 224, 145));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Sales Maintenance");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 0, 390, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1380, 70));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String updatepayment = updatePaymentTf.getText();
        double balance = Double.parseDouble(balanceTf.getText());
        
        if(customerIdTf.getText().equals("") || customerNameTf.getText().equals("") || amountDueTf.getText().equals("") || updatePaymentTf.getText().equals("") ){
            JOptionPane.showMessageDialog(this, "Please enter all data needed!");
        }else if(updatepayment.matches(".*[a-zA-Z]+.*")){
            JOptionPane.showMessageDialog(this, "Incorrect Input!", "Error", JOptionPane.ERROR_MESSAGE);
            updatePaymentTf.setText("");
        }else{
            
            double updatepaymenta = Double.valueOf(updatepayment);
            
            if(balance < 0){
                System.out.println("yes");
               
                
                double newbalance = balance + updatepaymenta;
                String status = "Paid";
                
                if(newbalance < 0){
                    status = "Partially Paid";
                }
                    
                String newbalancea = String.valueOf(newbalance);
                
                    try{
                        Statement s = DBConnector.mycon().createStatement();
                        int row = salesMaintenanceTable.getSelectedRow();
                        String id = salesTransactionsIdTf.getText();
                        System.out.println(id);
                        String query = "UPDATE sales_transactions SET `change_balance` = '"+newbalancea+"' , status='"+status+"' WHERE salestransaction_id=" + id;

                        s.executeUpdate(query);

                        DefaultTableModel model = (DefaultTableModel)salesMaintenanceTable.getModel();
                        model.setRowCount(0);

                        JOptionPane.showMessageDialog(null, "Updated Successfully!");
                        salesMaintenanceTable.setModel(new DefaultTableModel(null, new String[]{"STransaction ID", "Invoice ID", "Customer ID", "Customer Name", "Total Quantity", "Amount Due", "Status", "Change/Balance", "Delivery Type", "Mode of Payment", "Date"}));
                        setRecordsToTable();
                        
                        updatePaymentTf.setText("");           

                        updatePaymentTf.setEnabled(false);           

            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }
                
                
            }
            
            
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void searchTfKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTfKeyReleased
       String flavor = searchTf.getText();
        String searchQuery = "SELECT * FROM sales_transactions WHERE customername ='"+flavor+"'";
        try {
            PreparedStatement pst = DBConnector.mycon().prepareStatement(searchQuery);
            ResultSet rs = pst.executeQuery();
            salesMaintenanceTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_searchTfKeyReleased

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        updateBtn.setEnabled(true);
        updatePaymentTf.setEnabled(true);
    }//GEN-LAST:event_editBtnActionPerformed

    private void salesReportTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesReportTableMouseClicked

    }//GEN-LAST:event_salesReportTableMouseClicked

    private void salesMaintenanceTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesMaintenanceTableMouseClicked
        updateBtn.setEnabled(false);
        
        updatePaymentTf.setEnabled(false);
        int i = salesMaintenanceTable.getSelectedRow();
        TableModel model = salesMaintenanceTable.getModel();
        salesTransactionsIdTf.setText(model.getValueAt(i, 0).toString());
        customerIdTf.setText(model.getValueAt(i, 2).toString());
        customerNameTf.setText(model.getValueAt(i, 3).toString());
        amountDueTf.setText(model.getValueAt(i, 5).toString());
        balanceTf.setText(model.getValueAt(i, 7).toString());
        
    }//GEN-LAST:event_salesMaintenanceTableMouseClicked

    private void customerIdTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerIdTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerIdTfActionPerformed

    private void salesTransactionsIdTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesTransactionsIdTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salesTransactionsIdTfActionPerformed

    private void refreshBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtn1ActionPerformed
        salesMaintenanceTable.setModel(new DefaultTableModel(null, new String[]{"STransaction ID", "Invoice ID", "Customer ID", "Customer Name", "Total Quantity", "Amount Due", "Status", "Change/Balance", "Delivery Type", "Mode of Payment", "Date"}));
        setRecordsToTable();
    }//GEN-LAST:event_refreshBtn1ActionPerformed

    private void statusSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusSearchActionPerformed
        String status = statusSearch.getSelectedItem().toString();
        String searchQuery = "SELECT * FROM sales_transactions WHERE status ='"+status+"'";
        try {
            PreparedStatement pst = DBConnector.mycon().prepareStatement(searchQuery);
            ResultSet rs = pst.executeQuery();
            salesMaintenanceTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_statusSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesMaintenance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountDueTf;
    private javax.swing.JTextField balanceTf;
    private javax.swing.JTextField customerIdTf;
    private javax.swing.JTextField customerNameTf;
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshBtn1;
    public javax.swing.JTable salesMaintenanceTable;
    public javax.swing.JTable salesReportTable;
    private javax.swing.JTextField salesTransactionsIdTf;
    private javax.swing.JTextField searchTf;
    public javax.swing.JComboBox<String> statusSearch;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField updatePaymentTf;
    // End of variables declaration//GEN-END:variables
}
