/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salesAndInventorySystem;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author james
 */
public class StockAdjustment extends javax.swing.JFrame {

    /**
     * Creates new form ProductInquiry
     */
    public StockAdjustment() {
        initComponents();
        setRecordsToTable();
        showIcon();
        flavorSelect_();
    }
    
    public void flavorSelect_(){
        
        try{
            Statement s = DBConnector.mycon().createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM product_flavor");
            Vector v = new Vector();
            
            while(rs.next()){
                v.add(rs.getString("flavor"));
                
                DefaultComboBoxModel com = new DefaultComboBoxModel(v);
                searchFlavorCombobox.setModel(com);
            }
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private void showIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("wine__.png")));
    }
    
    public void setRecordsToTable(){
        
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/el_coco_db","root","root");
            PreparedStatement pst = con.prepareStatement("SELECT * FROM product_maintenance");
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                
                int product_id = rs.getInt("product_id");
                String flavor = rs.getString("flavor");
                String size = rs.getString("size");
                double price = rs.getDouble("price");
                int stocks = rs.getInt("stocks");
                String status = rs.getString("status");
                
                Object[] obj = {product_id, flavor, size, price, stocks, status };
                
                DefaultTableModel model = (DefaultTableModel)stockAdjustmentTable.getModel();
                model.addRow(obj);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        refreshBtn = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        productIdTf = new javax.swing.JTextField();
        flavorTf = new javax.swing.JTextField();
        priceTf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        stockAdjustmentTable = new javax.swing.JTable();
        sizeSelect = new javax.swing.JComboBox<>();
        stocksTf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        refreshBtn1 = new javax.swing.JButton();
        searchFlavorCombobox = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        statusSearch = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        refreshBtn.setBackground(new java.awt.Color(44, 119, 33));
        refreshBtn.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        refreshBtn.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh (1).png"))); // NOI18N
        refreshBtn.setText("Refresh");
        refreshBtn.setFocusable(false);
        refreshBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtnActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        productIdTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        productIdTf.setToolTipText("");
        productIdTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        productIdTf.setEnabled(false);
        productIdTf.setMargin(new java.awt.Insets(5, 5, 5, 5));
        jPanel2.add(productIdTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 80, 230, 40));

        flavorTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        flavorTf.setToolTipText("");
        flavorTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        flavorTf.setEnabled(false);
        jPanel2.add(flavorTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 130, 230, 40));

        priceTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        priceTf.setToolTipText("");
        priceTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        priceTf.setEnabled(false);
        jPanel2.add(priceTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 230, 230, 40));

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel9.setText("Flavor");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, -1, 40));

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel10.setText("Size");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 180, -1, 40));

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel11.setText("Price");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, -1, 40));

        updateBtn.setBackground(new java.awt.Color(44, 119, 33));
        updateBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/updated.png"))); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.setFocusable(false);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel2.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 340, 140, 50));

        jLabel13.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel13.setText("Product ID");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 80, -1, 40));

        editBtn.setBackground(new java.awt.Color(44, 119, 33));
        editBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        editBtn.setText("ADJUST STOCK");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel2.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 340, 240, 50));

        stockAdjustmentTable.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        stockAdjustmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Flavor", "Size", "Price", "Stocks", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stockAdjustmentTable.getTableHeader().setReorderingAllowed(false);
        stockAdjustmentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockAdjustmentTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(stockAdjustmentTable);
        if (stockAdjustmentTable.getColumnModel().getColumnCount() > 0) {
            stockAdjustmentTable.getColumnModel().getColumn(0).setResizable(false);
            stockAdjustmentTable.getColumnModel().getColumn(1).setResizable(false);
            stockAdjustmentTable.getColumnModel().getColumn(2).setResizable(false);
            stockAdjustmentTable.getColumnModel().getColumn(3).setResizable(false);
            stockAdjustmentTable.getColumnModel().getColumn(4).setResizable(false);
            stockAdjustmentTable.getColumnModel().getColumn(5).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 80, 920, 310));

        sizeSelect.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        sizeSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "500 mL", "1 Liter", "4 Liters", "6 Liters", "32 Liters", "36 Liters" }));
        sizeSelect.setEnabled(false);
        sizeSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sizeSelectActionPerformed(evt);
            }
        });
        jPanel2.add(sizeSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 230, 40));

        stocksTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        stocksTf.setToolTipText("");
        stocksTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        stocksTf.setEnabled(false);
        jPanel2.add(stocksTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 280, 230, 40));

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel12.setText("Stocks");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, 40));

        refreshBtn1.setBackground(new java.awt.Color(44, 119, 33));
        refreshBtn1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        refreshBtn1.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh (1).png"))); // NOI18N
        refreshBtn1.setText("Refresh");
        refreshBtn1.setFocusable(false);
        refreshBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtn1ActionPerformed(evt);
            }
        });
        jPanel2.add(refreshBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 30, 120, 40));

        searchFlavorCombobox.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        searchFlavorCombobox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "500 mL", "1 Liter", "4 Liters", "6 Liters", "32 Liters", "36 Liters" }));
        searchFlavorCombobox.setFocusable(false);
        searchFlavorCombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchFlavorComboboxActionPerformed(evt);
            }
        });
        jPanel2.add(searchFlavorCombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 30, 150, 40));

        jLabel14.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        jLabel14.setText("Search flavor :");
        jPanel2.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 30, -1, 40));

        statusSearch.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        statusSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Active", "Obsolete" }));
        statusSearch.setFocusable(false);
        statusSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusSearchActionPerformed(evt);
            }
        });
        jPanel2.add(statusSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 30, 150, 40));

        jLabel15.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        jLabel15.setText("Select Status :");
        jPanel2.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 30, 120, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1400, 420));

        jPanel1.setBackground(new java.awt.Color(0, 224, 145));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Stock Adjustment");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 0, 370, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1400, 70));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String updatedStock = stocksTf.getText();
        
        if(stocksTf.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Enter the updated number of stock first!");

        }else{
            if(updatedStock.matches(".*[a-zA-Z]+.*")){
                JOptionPane.showMessageDialog(this, "Incorrect Input!", "Error", JOptionPane.ERROR_MESSAGE);
                stocksTf.setText("");
            }else{

            try{
                Statement s = DBConnector.mycon().createStatement();
                int row = stockAdjustmentTable.getSelectedRow();
                String id = (stockAdjustmentTable.getModel().getValueAt(row, 0).toString());
                String query = "UPDATE product_maintenance SET stocks='"+updatedStock+"' where product_id=" + id;

                s.executeUpdate(query);

                JOptionPane.showMessageDialog(null, "Updated Successfully!");

                stockAdjustmentTable.setModel(new DefaultTableModel(null, new String[]{"Product ID", "Flavor", "Size", "Price", "Stocks", "Status"}));
                setRecordsToTable();

                stocksTf.setEnabled(false);

            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }
            
            }
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        updateBtn.setEnabled(true);
        stocksTf.setEnabled(true);
    }//GEN-LAST:event_editBtnActionPerformed

    private void stockAdjustmentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockAdjustmentTableMouseClicked
        updateBtn.setEnabled(false);
        stocksTf.setEnabled(false);
        int i = stockAdjustmentTable.getSelectedRow();
        TableModel model = stockAdjustmentTable.getModel();
        productIdTf.setText(model.getValueAt(i, 0).toString());
        flavorTf.setText(model.getValueAt(i, 1).toString());
        String size1 = model.getValueAt(i, 2).toString();
        switch(size1){
            case "500 mL":
            sizeSelect.setSelectedIndex(0);
            break;

            case "1 Liter":
            sizeSelect.setSelectedIndex(1);
            break;

            case "4 Liters":
            sizeSelect.setSelectedIndex(2);
            break;

            case "6 Liters":
            sizeSelect.setSelectedIndex(2);
            break;

            case "32 Liters":
            sizeSelect.setSelectedIndex(2);
            break;

            case "36 Liters":
            sizeSelect.setSelectedIndex(2);
            break;

        }
        priceTf.setText(model.getValueAt(i, 3).toString());
        stocksTf.setText(model.getValueAt(i, 4).toString());

    }//GEN-LAST:event_stockAdjustmentTableMouseClicked

    private void sizeSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sizeSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sizeSelectActionPerformed

    private void refreshBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtnActionPerformed
        stockAdjustmentTable.setModel(new DefaultTableModel(null, new String[]{"Product ID", "Flavor", "Size", "Price", "Stocks", "Status"}));
        setRecordsToTable();
    }//GEN-LAST:event_refreshBtnActionPerformed

    private void refreshBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtn1ActionPerformed
        stockAdjustmentTable.setModel(new DefaultTableModel(null, new String[]{"Product ID", "Flavor", "Size", "Price", "Stocks", "Status"}));
        setRecordsToTable();
    }//GEN-LAST:event_refreshBtn1ActionPerformed

    private void searchFlavorComboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchFlavorComboboxActionPerformed
        String flavor = searchFlavorCombobox.getSelectedItem().toString();
        String searchQuery = "SELECT * FROM product_maintenance WHERE flavor ='"+flavor+"'";
        try {
            PreparedStatement pst = DBConnector.mycon().prepareStatement(searchQuery);
            ResultSet rs = pst.executeQuery();
            stockAdjustmentTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_searchFlavorComboboxActionPerformed

    private void statusSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusSearchActionPerformed
        String status = statusSearch.getSelectedItem().toString();
        String searchQuery = "SELECT * FROM product_maintenance WHERE status ='"+status+"'";
        try {
            PreparedStatement pst = DBConnector.mycon().prepareStatement(searchQuery);
            ResultSet rs = pst.executeQuery();
            stockAdjustmentTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_statusSearchActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StockAdjustment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StockAdjustment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StockAdjustment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StockAdjustment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StockAdjustment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editBtn;
    private javax.swing.JTextField flavorTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField priceTf;
    private javax.swing.JTextField productIdTf;
    private javax.swing.JButton refreshBtn;
    private javax.swing.JButton refreshBtn1;
    public javax.swing.JComboBox<String> searchFlavorCombobox;
    private javax.swing.JComboBox<String> sizeSelect;
    public javax.swing.JComboBox<String> statusSearch;
    public javax.swing.JTable stockAdjustmentTable;
    private javax.swing.JTextField stocksTf;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
