/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salesAndInventorySystem;

import java.awt.Toolkit;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author james
 */
public class PurchasedOrderMaintenance extends javax.swing.JFrame {

    /**
     * Creates new form PurchasedOrderMaintenance
     */
    public PurchasedOrderMaintenance() {
        initComponents();
        setRecordsToTable();
        showIcon();
        suppSelect();
    }
    
    public void suppSelect(){
        
        try{
            Statement s = DBConnector.mycon().createStatement();
            ResultSet rs = s.executeQuery("SELECT * FROM supplier_maintenance");
            Vector v = new Vector();
            
            while(rs.next()){
                v.add(rs.getString("suppliername"));
                
                DefaultComboBoxModel com = new DefaultComboBoxModel(v);
                supplierSelect.setModel(com);
            }
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    
    private void showIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("wine__.png")));
    }
    
    public void setRecordsToTable(){
        
        try
        {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/el_coco_db","root","root");
            PreparedStatement pst = con.prepareStatement("SELECT * FROM po_cart");
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                
                int po_cart_id = rs.getInt("po_cart_id");
                int po_invoice_id = rs.getInt("po_invoice_id");
                String suppliername = rs.getString("suppliername");
                String product = rs.getString("product");
                double price = rs.getDouble("price");
                int quantity = rs.getInt("quantity");
                double total = rs.getDouble("total");
                String orderstatus = rs.getString("orderstatus");
                String deliverytype = rs.getString("deliverytype");
                String modeofpayment = rs.getString("modeofpayment");
                String paymentstatus = rs.getString("paymentstatus");
                
                Object[] obj = {po_cart_id, po_invoice_id, suppliername, product, price, quantity, total, orderstatus, deliverytype, modeofpayment, paymentstatus };
                
                javax.swing.table.DefaultTableModel model = (javax.swing.table.DefaultTableModel)purchasedOrderReportTable.getModel();
                model.addRow(obj);
            }
            
        }catch(Exception e){
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        productT = new javax.swing.JTextField();
        purchasedOrderCartIdTf = new javax.swing.JTextField();
        supplierNameTf = new javax.swing.JTextField();
        quantityTf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        updateBtn = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        editBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        purchasedOrderReportTable = new javax.swing.JTable();
        updatePaymentStatusSelect = new javax.swing.JComboBox<>();
        updateOrderStatusSelect = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        refreshBtn1 = new javax.swing.JButton();
        statusSearch = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        supplierSelect = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 224, 145));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("Purchased Orders Maintenance");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 0, 650, 70));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1550, 70));

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel9.setText("Update Payment Status");
        jPanel8.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(760, 140, -1, 40));

        productT.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        productT.setToolTipText("");
        productT.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        productT.setEnabled(false);
        jPanel8.add(productT, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 140, 230, 40));

        purchasedOrderCartIdTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        purchasedOrderCartIdTf.setToolTipText("");
        purchasedOrderCartIdTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        purchasedOrderCartIdTf.setEnabled(false);
        purchasedOrderCartIdTf.setMargin(new java.awt.Insets(5, 5, 5, 5));
        purchasedOrderCartIdTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchasedOrderCartIdTfActionPerformed(evt);
            }
        });
        jPanel8.add(purchasedOrderCartIdTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 40, 230, 40));

        supplierNameTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        supplierNameTf.setToolTipText("");
        supplierNameTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        supplierNameTf.setEnabled(false);
        supplierNameTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierNameTfActionPerformed(evt);
            }
        });
        jPanel8.add(supplierNameTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 90, 230, 40));

        quantityTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        quantityTf.setToolTipText("");
        quantityTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        quantityTf.setEnabled(false);
        jPanel8.add(quantityTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 40, 230, 40));

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel12.setText("Product");
        jPanel8.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 140, -1, 40));

        jLabel13.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel13.setText("Quantity");
        jPanel8.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 40, -1, 40));

        jLabel14.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel14.setText("Update Order Status");
        jPanel8.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 90, -1, 40));

        updateBtn.setBackground(new java.awt.Color(44, 119, 33));
        updateBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        updateBtn.setForeground(new java.awt.Color(255, 255, 255));
        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/updated.png"))); // NOI18N
        updateBtn.setText("UPDATE");
        updateBtn.setFocusable(false);
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        jPanel8.add(updateBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 140, 50));

        jLabel15.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel15.setText("Supplier Name");
        jPanel8.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 90, -1, 40));

        editBtn.setBackground(new java.awt.Color(44, 119, 33));
        editBtn.setFont(new java.awt.Font("Franklin Gothic Demi", 0, 18)); // NOI18N
        editBtn.setForeground(new java.awt.Color(255, 255, 255));
        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        editBtn.setText("EDIT");
        editBtn.setFocusable(false);
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        jPanel8.add(editBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 210, 110, 50));

        purchasedOrderReportTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PO Cart ID", "PO Invoice ID", "Supplier Name", "Product", "Price", "Quantity", "Total", "Order Status", "Delivery Type", "Payment Method", "Payment Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        purchasedOrderReportTable.getTableHeader().setReorderingAllowed(false);
        purchasedOrderReportTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                purchasedOrderReportTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(purchasedOrderReportTable);
        if (purchasedOrderReportTable.getColumnModel().getColumnCount() > 0) {
            purchasedOrderReportTable.getColumnModel().getColumn(0).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(1).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(2).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(3).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(4).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(5).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(6).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(7).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(8).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(9).setResizable(false);
            purchasedOrderReportTable.getColumnModel().getColumn(10).setResizable(false);
        }

        jPanel8.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 1490, 380));

        updatePaymentStatusSelect.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        updatePaymentStatusSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unpaid", "Partially Paid", "Paid" }));
        updatePaymentStatusSelect.setEnabled(false);
        updatePaymentStatusSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatePaymentStatusSelectActionPerformed(evt);
            }
        });
        jPanel8.add(updatePaymentStatusSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 140, 230, 40));

        updateOrderStatusSelect.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        updateOrderStatusSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ordered", "On-hand", "Delivered", "Not yet delivered" }));
        updateOrderStatusSelect.setEnabled(false);
        updateOrderStatusSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateOrderStatusSelectActionPerformed(evt);
            }
        });
        jPanel8.add(updateOrderStatusSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 90, 230, 40));

        jLabel16.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel16.setText("Purchased Order Cart ID");
        jPanel8.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 40, -1, 40));

        refreshBtn1.setBackground(new java.awt.Color(44, 119, 33));
        refreshBtn1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 14)); // NOI18N
        refreshBtn1.setForeground(new java.awt.Color(255, 255, 255));
        refreshBtn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/refresh (1).png"))); // NOI18N
        refreshBtn1.setText("Refresh");
        refreshBtn1.setFocusable(false);
        refreshBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBtn1ActionPerformed(evt);
            }
        });
        jPanel8.add(refreshBtn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1400, 220, 120, 40));

        statusSearch.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        statusSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Unpaid", "Partially Paid", "Paid" }));
        statusSearch.setFocusable(false);
        statusSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusSearchActionPerformed(evt);
            }
        });
        jPanel8.add(statusSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 210, 170, 50));

        jLabel17.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        jLabel17.setText("Select Payment Status :");
        jPanel8.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 200, 50));

        supplierSelect.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        supplierSelect.setFocusable(false);
        supplierSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supplierSelectActionPerformed(evt);
            }
        });
        jPanel8.add(supplierSelect, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 210, 230, 50));

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        jLabel10.setText("Select Supplier :");
        jPanel8.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 210, -1, 50));

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 1550, 680));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void purchasedOrderCartIdTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchasedOrderCartIdTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_purchasedOrderCartIdTfActionPerformed

    private void supplierNameTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierNameTfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supplierNameTfActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        String updateorderstatus = updateOrderStatusSelect.getSelectedItem().toString();
        String updatepaymentstatus = updatePaymentStatusSelect.getSelectedItem().toString();


            try{
                Statement s = DBConnector.mycon().createStatement();
                int row = purchasedOrderReportTable.getSelectedRow();
                String id = purchasedOrderCartIdTf.getText();
                String query = "UPDATE po_cart SET orderstatus='"+updateorderstatus+"',paymentstatus='"+updatepaymentstatus+"' where po_cart_id=" + id;

                s.executeUpdate(query);

                JOptionPane.showMessageDialog(null, "Updated Successfully!");

                purchasedOrderReportTable.setModel(new DefaultTableModel(null, new String[]{"PO Cart ID", "PO Invoice ID", "Supplier Name", "Product","Price", "Quantity", "Total", "Order Status", "Delivery Type", "Payment Method", "Payment Status"}));
                setRecordsToTable();

                updateOrderStatusSelect.setEnabled(false);
                updatePaymentStatusSelect.setEnabled(false);

            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, e);
            }
        
    }//GEN-LAST:event_updateBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        updateBtn.setEnabled(true);
        updateOrderStatusSelect.setEnabled(true);
        updatePaymentStatusSelect.setEnabled(true);
    }//GEN-LAST:event_editBtnActionPerformed

    private void updatePaymentStatusSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatePaymentStatusSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updatePaymentStatusSelectActionPerformed

    private void updateOrderStatusSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateOrderStatusSelectActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateOrderStatusSelectActionPerformed

    private void purchasedOrderReportTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_purchasedOrderReportTableMouseClicked
        updateBtn.setEnabled(false);
        
        updatePaymentStatusSelect.setEnabled(false);
        updateOrderStatusSelect.setEnabled(false);
        int i = purchasedOrderReportTable.getSelectedRow();
        TableModel model = purchasedOrderReportTable.getModel();
        purchasedOrderCartIdTf.setText(model.getValueAt(i, 0).toString());
        supplierNameTf.setText(model.getValueAt(i, 2).toString());
        productT.setText(model.getValueAt(i, 3).toString());
        quantityTf.setText(model.getValueAt(i, 5).toString());
        
        String orderstatus1 = model.getValueAt(i, 7).toString();
        switch(orderstatus1){
            case "Ordered":
            updateOrderStatusSelect.setSelectedIndex(0);
            break;
            
            case "On-hand":
            updateOrderStatusSelect.setSelectedIndex(1);
            break;
            
            case "Delivered":
            updateOrderStatusSelect.setSelectedIndex(2);
            break;
            
            case "Not yet delivered":
            updateOrderStatusSelect.setSelectedIndex(3);
            break;
        }
        
        String paymentStatus1 = model.getValueAt(i, 10).toString();
        switch(paymentStatus1){
            case "Unpaid":
            updatePaymentStatusSelect.setSelectedIndex(0);
            break;
            
            case "Partially Paid":
            updatePaymentStatusSelect.setSelectedIndex(1);
            break;
            
            case "Paid":
            updatePaymentStatusSelect.setSelectedIndex(2);
            break;
        }
        
        updateOrderStatusSelect.setEnabled(false);
        updatePaymentStatusSelect.setEnabled(false);
    }//GEN-LAST:event_purchasedOrderReportTableMouseClicked

    private void refreshBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBtn1ActionPerformed
        purchasedOrderReportTable.setModel(new DefaultTableModel(null, new String[]{"PO Cart ID", "PO Invoice ID", "Supplier Name", "Product","Price", "Quantity", "Total", "Order Status", "Delivery Type", "Payment Method", "Payment Status"}));
        setRecordsToTable();
    }//GEN-LAST:event_refreshBtn1ActionPerformed

    private void statusSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusSearchActionPerformed
        String status = statusSearch.getSelectedItem().toString();
        String searchQuery = "SELECT * FROM po_cart WHERE paymentstatus ='"+status+"'";
        try {
            PreparedStatement pst = DBConnector.mycon().prepareStatement(searchQuery);
            ResultSet rs = pst.executeQuery();
            purchasedOrderReportTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_statusSearchActionPerformed

    private void supplierSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supplierSelectActionPerformed

        String supp = supplierSelect.getSelectedItem().toString();
        String searchQuery = "SELECT * FROM po_cart WHERE suppliername ='"+supp+"'";
        try {
            PreparedStatement pst = DBConnector.mycon().prepareStatement(searchQuery);
            ResultSet rs = pst.executeQuery();
            purchasedOrderReportTable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex);
        }
    }//GEN-LAST:event_supplierSelectActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PurchasedOrderMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PurchasedOrderMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PurchasedOrderMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PurchasedOrderMaintenance.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PurchasedOrderMaintenance().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField productT;
    private javax.swing.JTextField purchasedOrderCartIdTf;
    private javax.swing.JTable purchasedOrderReportTable;
    private javax.swing.JTextField quantityTf;
    private javax.swing.JButton refreshBtn1;
    public javax.swing.JComboBox<String> statusSearch;
    private javax.swing.JTextField supplierNameTf;
    private javax.swing.JComboBox<String> supplierSelect;
    private javax.swing.JButton updateBtn;
    private javax.swing.JComboBox<String> updateOrderStatusSelect;
    private javax.swing.JComboBox<String> updatePaymentStatusSelect;
    // End of variables declaration//GEN-END:variables
}
