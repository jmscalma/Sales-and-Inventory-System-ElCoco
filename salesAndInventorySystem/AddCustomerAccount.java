/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package salesAndInventorySystem;

import java.awt.Color;
import java.awt.Toolkit;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;

/**
 *
 * @author james
 */
public class AddCustomerAccount extends javax.swing.JFrame {
    
    public static String customerid;
    public static String userid;
    public static String usernamez;
    
    public AddCustomerAccount() {
        initComponents();
    }
    
    public AddCustomerAccount(String username, String firstname, String lastname) {
        initComponents();
        usernamez = username;
        
        firstNameTf.setText(firstname);
        lastNameTf.setText(lastname);
        
        getCustId();
        showIcon();
    }
    
    private void showIcon(){
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("wine__.png")));
    }
    
    public void getCustId(){
        try{
            Statement s = DBConnector.mycon().createStatement();
            ResultSet rs = s.executeQuery("SELECT customer_id,customername FROM customer_maintenance WHERE customername ='"+usernamez+"' ");
            if(rs.next()){
                
                customerid = (rs.getString("customer_id"));
                
            }
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(this, e);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        usernameTf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        firstNameTf = new javax.swing.JTextField();
        lastNameTf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        cancelBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        confirmPasswordTf = new javax.swing.JPasswordField();
        passwordTf = new javax.swing.JPasswordField();
        showPass = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 224, 145));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Franklin Gothic Book", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("ADD USER ACCOUNT");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 0, 330, 60));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 60));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel9.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel9.setText("Username");
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, -1, 40));

        usernameTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        usernameTf.setToolTipText("");
        usernameTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        jPanel2.add(usernameTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 230, 40));

        jLabel10.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel10.setText("Password");
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, 40));

        jLabel11.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel11.setText("First Name");
        jPanel2.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 300, -1, 40));

        firstNameTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        firstNameTf.setToolTipText("");
        firstNameTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        jPanel2.add(firstNameTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 340, 230, 40));

        lastNameTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 18)); // NOI18N
        lastNameTf.setToolTipText("");
        lastNameTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        jPanel2.add(lastNameTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 420, 230, 40));

        jLabel12.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel12.setText("Last Name");
        jPanel2.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 380, -1, 40));

        jLabel13.setFont(new java.awt.Font("Franklin Gothic Book", 1, 22)); // NOI18N
        jLabel13.setText("Confirm Password");
        jPanel2.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 220, -1, 40));

        cancelBtn.setBackground(new java.awt.Color(44, 119, 33));
        cancelBtn.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        cancelBtn.setForeground(new java.awt.Color(255, 255, 255));
        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel.png"))); // NOI18N
        cancelBtn.setText("CANCEL");
        cancelBtn.setFocusable(false);
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        jPanel2.add(cancelBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 480, 190, 50));

        saveBtn.setBackground(new java.awt.Color(44, 119, 33));
        saveBtn.setFont(new java.awt.Font("Franklin Gothic Book", 0, 24)); // NOI18N
        saveBtn.setForeground(new java.awt.Color(255, 255, 255));
        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        saveBtn.setText("SAVE");
        saveBtn.setFocusable(false);
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        jPanel2.add(saveBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 480, 190, 50));

        confirmPasswordTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 20)); // NOI18N
        confirmPasswordTf.setForeground(new java.awt.Color(204, 204, 204));
        confirmPasswordTf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        confirmPasswordTf.setText("Password");
        confirmPasswordTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        confirmPasswordTf.setMargin(new java.awt.Insets(2, 2, 2, 20));
        confirmPasswordTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                confirmPasswordTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                confirmPasswordTfFocusLost(evt);
            }
        });
        jPanel2.add(confirmPasswordTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 260, 230, 40));

        passwordTf.setFont(new java.awt.Font("Franklin Gothic Book", 0, 20)); // NOI18N
        passwordTf.setForeground(new java.awt.Color(204, 204, 204));
        passwordTf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        passwordTf.setText("Password");
        passwordTf.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 224, 145)));
        passwordTf.setMargin(new java.awt.Insets(2, 2, 2, 20));
        passwordTf.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                passwordTfFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                passwordTfFocusLost(evt);
            }
        });
        jPanel2.add(passwordTf, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 150, 230, 40));

        showPass.setBackground(new java.awt.Color(255, 255, 255));
        showPass.setText("Show Password");
        showPass.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showPassActionPerformed(evt);
            }
        });
        jPanel2.add(showPass, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, -1, 30));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 470, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // DELETE FROM `user_maintenance` WHERE (`user_id` = '1015');
        System.out.println(customerid);
        
        try{ 
            
               Statement s = DBConnector.mycon().createStatement();
               s.executeUpdate("DELETE FROM customer_maintenance WHERE customer_id =" + customerid );
               
               JOptionPane.showMessageDialog(rootPane, "Delete Successfully!");
               
               Login l = new Login();
               l.setVisible(true);
               this.dispose();
               
           }catch(SQLException e){
               JOptionPane.showMessageDialog(null, e);
           }
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        
       //if there is a field left blank
       if(usernameTf.getText().equals("") || confirmPasswordTf.getText().equals("") || firstNameTf.getText().equals("") || lastNameTf.getText().equals("") ){
           JOptionPane.showMessageDialog(this, "Please enter all data needed!");
       }else if(!firstNameTf.getText().matches("^[ A-Za-z]+$") || !lastNameTf.getText().matches("^[ A-Za-z]+$")){
            JOptionPane.showMessageDialog(this, "Incorrect Name Input!", "Error", JOptionPane.ERROR_MESSAGE);
       
       }else{
           
           String username = usernameTf.getText();
           String password = passwordTf.getText();
           String confirmpassword = confirmPasswordTf.getText();
           String firstName = firstNameTf.getText();
           String lastName = lastNameTf.getText();
           String position = "Customer";
           
           String name = firstName + " " + lastName;
           
           if(password.equals(confirmpassword)){
               try{
                   Statement s = DBConnector.mycon().createStatement();
                   String query = "SELECT * FROM user_maintenance WHERE username='"+username+"' ";
                   
                   ResultSet rs1 = s.executeQuery(query);
                   if(!rs1.next()){
                       try{
               
               Statement sz = DBConnector.mycon().createStatement();
               sz.executeUpdate("INSERT INTO user_maintenance (username, password, firstname, lastname, position) "
                       + "VALUES ('"+username+"','"+password+"','"+firstName+"','"+lastName+"','"+position+"')");
               
               JOptionPane.showMessageDialog(rootPane, "Added Successfully!");
               
               usernameTf.setText("");
               passwordTf.setText("");
               confirmPasswordTf.setText("");
               firstNameTf.setText("");
               lastNameTf.setText("");
               
               
               try{
                   Statement sa = DBConnector.mycon().createStatement();
                   ResultSet rs = sa.executeQuery("SELECT user_id,username FROM user_maintenance WHERE username ='"+username+"' ");
                   if(rs.next()){
                
                        userid = (rs.getString("user_id"));
                
                    }
                   
                   
               }catch(SQLException e){
                   JOptionPane.showMessageDialog(null, e);
               }
               
               int userids = Integer.valueOf(userid);
               
               CustomerMainMenu c = new CustomerMainMenu(username, position, userids, name);
               c.setVisible(true);
               this.dispose();
               
               
                            java.util.Date d = new java.util.Date();
                            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                            String date = sdf.format(d);
                            
                            SimpleDateFormat sdft = new SimpleDateFormat("HH:mm:ss a");
                            String time = sdft.format(d);
                            String status = "Logged In";
                            
                            try{
                            Statement sz1 = DBConnector.mycon().createStatement();
                            sz1.executeUpdate("INSERT INTO audit_trail (`user_id`, `username`, `position`,`time`, `date`, `status`) "
                                            + "VALUES ('"+userids+"','"+username+"','"+position+"','"+time+"','"+date+"','"+status+"')");
                            
                            }catch(SQLException e){
                                JOptionPane.showMessageDialog(this, e);
                            }
               
               
           }catch(SQLException e){
               JOptionPane.showMessageDialog(null, e);
           }
                   }else{
                       JOptionPane.showMessageDialog(this, "Username already exist!");
                   }
                   
               }catch(SQLException e){
                   JOptionPane.showMessageDialog(null, e);
               }
           
           
           
        }else{
           JOptionPane.showMessageDialog(null, "Password does not matched!");
           passwordTf.setText("");
           confirmPasswordTf.setText("");
        }
               
       }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void confirmPasswordTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordTfFocusGained
        if(confirmPasswordTf.getText().equals("Password")){
            confirmPasswordTf.setText("");
            confirmPasswordTf.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_confirmPasswordTfFocusGained

    private void confirmPasswordTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_confirmPasswordTfFocusLost
        if(confirmPasswordTf.getText().equals("")){
            confirmPasswordTf.setText("Password");
            confirmPasswordTf.setForeground(new Color(204,204,204));
        }
    }//GEN-LAST:event_confirmPasswordTfFocusLost

    private void passwordTfFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTfFocusGained
        if(passwordTf.getText().equals("Password")){
            passwordTf.setText("");
            passwordTf.setForeground(new Color(0,0,0));
        }
    }//GEN-LAST:event_passwordTfFocusGained

    private void passwordTfFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_passwordTfFocusLost
       if(passwordTf.getText().equals("")){
            passwordTf.setText("Password");
            passwordTf.setForeground(new Color(204,204,204));
        }
    }//GEN-LAST:event_passwordTfFocusLost

    private void showPassActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showPassActionPerformed
        if(showPass.isSelected()){
            passwordTf.setEchoChar((char)0);
        }else{
            passwordTf.setEchoChar('\u25CF');
        }
    }//GEN-LAST:event_showPassActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddCustomerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddCustomerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddCustomerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddCustomerAccount.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddCustomerAccount().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPasswordField confirmPasswordTf;
    private javax.swing.JTextField firstNameTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField lastNameTf;
    private javax.swing.JPasswordField passwordTf;
    private javax.swing.JButton saveBtn;
    private javax.swing.JCheckBox showPass;
    private javax.swing.JTextField usernameTf;
    // End of variables declaration//GEN-END:variables
}
